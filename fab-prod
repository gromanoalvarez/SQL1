#Creo el esquema o mi database y lo uso
CREATE DATABASE IF NOT EXISTS ALMACEN_UNLAM;
USE ALMACEN_UNLAM;

#Creo las 2 tablas
CREATE TABLE FABRICANTE(
CODIGO INT(10) PRIMARY KEY,
NOMBRE VARCHAR(100));

CREATE TABLE PRODUCTO(
CODIGO INT(10) PRIMARY KEY,
NOMBRE VARCHAR(100) NOT NULL,
PRECIO DOUBLE NOT NULL,
CODIGO_FAB INT(10),
FOREIGN KEY(CODIGO_FAB) REFERENCES FABRICANTE(CODIGO));

#Inserto valores en mis dos tablas
INSERT INTO FABRICANTE (CODIGO, NOMBRE) VALUES
(001, 'Arcor'),
(002, 'Marolio'),
(003, 'Molinos'),
(004, 'Johnson'),
(005, 'Ledesma');

INSERT INTO PRODUCTO (CODIGO, NOMBRE, PRECIO, CODIGO_FAB) VALUES
(0001, 'Azucar', 100.80, 005),
(0002, 'Mayonesa', 70.65, 003),
(0003, 'Jabon Liquido', 400.00, 004),
(0004, 'Spaghetti', 81.90, 001),
(0005, 'Tomate en lata', 95.00, 001),
(0006, 'Desodorante Dove', 321.20, 004),
(0007, 'Yerba', 324.80, 005),
(0008, 'Ketchup', 56.78, 003),
(0009, 'Sal', 65.00, 001),
(0010, 'Aceite', 230.50, 002);

#CONSULTAS
#1) LISTAR NOMBRES Y PRECIOS DE TODOS LOS PRODUCTOS
SELECT NOMBRE, PRECIO
FROM PRODUCTO;
#2) LISTA TODAS LAS COLUMNAS DE LA TABLA PRODUCTO
SELECT *
FROM PRODUCTO;
#3) Lista el nombre de los productos, el precio en euros y el precio en dólares
estadounidenses (USD).
# USD OFICIAL: 117 --> 100.8/117
# EURO OFICIAL: 122 --> 100.8/122
SELECT NOMBRE, PRECIO as PRECIO_ARS, (PRECIO/117) AS PRECIO_USD,
(PRECIO/122) AS PRECIO_EUROS
FROM PRODUCTO;
#4) Lista los nombres y los precios de todos los productos de la tabla producto, que
terminen con las letras ESA.
SELECT NOMBRE, PRECIO
FROM PRODUCTO
WHERE NOMBRE LIKE '%ESA';
#5) Lista los nombres y los precios de todos los productos de la tabla producto, que
comiencen con A.
SELECT NOMBRE, PRECIO
FROM PRODUCTO
WHERE NOMBRE LIKE 'A%';
#6) Lista el nombre de todos los fabricantes en una columna, y en otra columna
obtenga en mayúsculas los dos primeros caracteres del nombre del fabricante.
SELECT NOMBRE, UPPER(SUBSTRING(NOMBRE, 1, 2)) AS ABREV,
UPPER(LEFT(NOMBRE, 2)) AS ABREV_LEFT,
SUBSTRING(UPPER(NOMBRE), 1, 2) AS OPCION3
FROM FABRICANTE;
#7) Lista los nombres y los precios de todos los productos de la tabla producto,
redondeando el valor del precio.
SELECT NOMBRE, PRECIO, ROUND(PRECIO) AS REDONDEO
FROM PRODUCTO;
#8) Lista los nombres y los precios de todos los productos de la tabla producto,
truncando el valor del precio para mostrarlo sin ninguna cifra decimal.
SELECT NOMBRE, PRECIO, TRUNCATE(PRECIO, 0) AS PRECIO_TRUNCADO
FROM PRODUCTO;
#9) Lista el código de los fabricantes que tienen productos en la tabla producto.
SELECT DISTINCT CODIGO_FAB
FROM PRODUCTO;
#10) Lista los nombres de los fabricantes ordenados de forma ascendente
SELECT NOMBRE
FROM FABRICANTE
ORDER BY NOMBRE ASC;
#11) Lista los nombres de los fabricantes ordenados de forma descendente
SELECT NOMBRE
FROM FABRICANTE
ORDER BY NOMBRE DESC;
#12) Lista los nombres de los productos ordenados en primer lugar por el nombre de
forma ascendente y en segundo lugar por el precio de forma descendente.
SELECT NOMBRE, PRECIO
FROM PRODUCTO
ORDER BY NOMBRE ASC, PRECIO DESC;
#13) Devuelve una lista con las 5 primeras filas de la tabla fabricante.
SELECT *
FROM FABRICANTE
LIMIT 5;
#14) Lista el nombre y el precio del producto más barato. (Utilice solamente las
cláusulas ORDER BY y LIMIT 1)
SELECT NOMBRE, PRECIO
FROM PRODUCTO
ORDER BY PRECIO ASC
LIMIT 1;
#15) Lista el nombre y el precio del producto más caro. (Utilice solamente las cláusulas
ORDER BY y LIMIT 1)
SELECT NOMBRE, PRECIO
FROM PRODUCTO
ORDER BY PRECIO DESC
LIMIT 1;
#16) Lista el nombre de todos los productos del fabricante cuyo código de fabricante
es igual a 2.
SELECT NOMBRE, CODIGO_FAB
FROM PRODUCTO
WHERE CODIGO_FAB = 002;
#17) Lista el nombre de los productos que tienen un precio menor o igual a 1€.
SELECT NOMBRE, PRECIO AS PRECIO_ARS, (PRECIO/122) PRECIO_EUROS
FROM PRODUCTO
WHERE (PRECIO/122) <= 1;
#18) Lista todos los productos que tengan un precio entre 1€ y 3€. Sin utilizar el
operador BETWEEN.
SELECT NOMBRE, PRECIO AS PRECIO_ARS, (PRECIO/122) AS PRECIO_EURO
FROM PRODUCTO
WHERE (PRECIO/122) >= 1
AND (PRECIO/122) <= 3;
#19) Lista todos los productos que tengan un precio entre 1€ y 3€. Utilizando el
operador BETWEEN.
SELECT NOMBRE, PRECIO AS PRECIO_ARS, (PRECIO/122) AS PRECIO_EURO2
FROM PRODUCTO
WHERE (PRECIO/122) BETWEEN 1 AND 3;
#20) Lista todos los productos que tengan un precio mayor que 2€ y que el código de
fabricante sea igual a 004.
SELECT NOMBRE, (PRECIO/122) AS PRECIO_EUROS, CODIGO_FAB
FROM PRODUCTO
WHERE (PRECIO/122) > 2
AND CODIGO_FAB = 004;
#21) Lista todos los productos donde el código de fabricante sea 1, 3 o 5. Sin utilizar el
operador IN.
SELECT NOMBRE, CODIGO_FAB
FROM PRODUCTO
WHERE CODIGO_FAB = 001
OR CODIGO_FAB = 003
OR CODIGO_FAB = 005;
#22) Lista todos los productos donde el código de fabricante sea 1, 3 o 5. Utilizando el
operador IN.
SELECT NOMBRE, CODIGO_FAB AS COD_CON_IN
FROM PRODUCTO
WHERE CODIGO_FAB IN (1, 3, 5);
#23) Lista el nombre y el precio de los productos en céntimos (Habrá que multiplicar
por 100 el valor del precio). Cree un alias para la columna que contiene el precio que
se llame céntimos.
SELECT NOMBRE, PRECIO, PRECIO*100 AS CENTIMOS2
FROM PRODUCTO;
#24) Lista los nombres de los fabricantes cuyo nombre empiece por la letra L
SELECT NOMBRE
FROM FABRICANTE
WHERE NOMBRE LIKE 'L%';
#25) Lista los nombres de los fabricantes cuyo nombre termine por la vocal e.
SELECT NOMBRE
FROM FABRICANTE
WHERE NOMBRE LIKE '%O';
#26) Lista los nombres de los fabricantes cuyo nombre contenga el carácter w.
SELECT NOMBRE
FROM FABRICANTE
WHERE NOMBRE LIKE '%H%';
#27) Lista los códigos de los fabricantes cuyo nombre este vacio
SELECT CODIGO
FROM FABRICANTE
WHERE NOMBRE IS NULL;
#28) Devuelve una lista con el nombre de todos los productos que contienen la cadena
'Mayo' en el nombre.
SELECT NOMBRE
FROM PRODUCTO
WHERE NOMBRE LIKE '%MAYO%';
#29) Devuelve una lista con el nombre de todos los productos que contienen la cadena
'Ket' en el nombre y tienen un precio inferior a 200(ARS).
SELECT NOMBRE, PRECIO
FROM PRODUCTO
WHERE NOMBRE LIKE '%KET%' AND PRECIO < 200;
#30) Lista el nombre y el precio de todos los productos que tengan un precio mayor o
igual a 180ARS. Ordene el resultado en primer lugar por el precio (en orden
descendente) y en segundo lugar por el nombre (en orden ascendente).
SELECT NOMBRE, PRECIO
FROM PRODUCTO
WHERE PRECIO >= 180
ORDER BY PRECIO DESC, NOMBRE;
